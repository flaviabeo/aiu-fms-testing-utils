System:
Solve the following coding problem. Wrap your code answer using ```


Question:
Write a Rust program that implements a simple finite state machine (FSM) to control the flow of a traffic light system, transitioning between green, yellow, and red states.


Answer:
```rust
use std::time::Duration;
use std::thread::sleep;

enum State {
    Green,
    Yellow,
    Red,
}

struct TrafficLight {
    state: State,
}

impl TrafficLight {
    fn new() -> TrafficLight {
        TrafficLight { state: State::Green }
    }

    fn run(&mut self) {
        loop {
            match self.state {
                State::Green => {
                    println!("Green");
                    sleep(Duration::from_secs(5));
                    self.state = State::Yellow;
                }
                State::Yellow => {
                    println!("Yellow");
                    sleep(Duration::from_secs(2));
                    self.state = State::Red;
                }
                State::Red => {
                    println!("Red");
                    sleep(Duration::from_secs(5));
                    self.state = State::Green;
                }
            }
        }
    }
}

fn main() {
    let mut traffic_light = TrafficLight::new();
    traffic_light.run();
}
```<|endoftext|>